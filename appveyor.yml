# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

environment:
  global:
  # TODO This is the Rust channel that build jobs will use by default but can be
  # overridden on a case by case basis down below
    RUST_VERSION: stable

    # TODO Update this to match the name of your project.
    CRATE_NAME: se_shell

  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  matrix:
    # MinGW
    - TARGET: x86_64-pc-windows-gnu
      BITS: 64
      MSYS2: 1
      OPENSSL_VERSION: 1_1_0i
      OPENSSL_DIR: C:\OpenSSL
    
    # MSVC
    #- TARGET: i686-pc-windows-msvc
    #  BITS: 32
    #  OPENSSL_VERSION: 1_1_0i
    #  OPENSSL_DIR: C:\OpenSSL

    #- TARGET: x86_64-pc-windows-msvc
    #  OPENSSL_VERSION: 1_1_0i
    #  VCPKG_DEFAULT_TRIPLET: x64-windows
    #  VCPKGRS_DYNAMIC: 1


    # Testing other channels
    #- TARGET: x86_64-pc-windows-gnu
    #  RUST_VERSION: nightly
    #- TARGET: x86_64-pc-windows-msvc
    #  RUST_VERSION: nightly

install:
  
  # install OpenSSL
  - mkdir C:\OpenSSL
  - ps: if (Test-Path env:OPENSSL_VERSION) { Start-FileDownload "http://slproweb.com/download/Win${env:BITS}OpenSSL-${env:OPENSSL_VERSION}.exe" }
  - if defined OPENSSL_VERSION Win%BITS%OpenSSL-%OPENSSL_VERSION%.exe /SILENT /VERYSILENT /SP- /DIR="C:\OpenSSL"
  - appveyor DownloadFile https://curl.haxx.se/ca/cacert.pem -FileName C:\OpenSSL\cacert.pem

  # install rust
  #- ps: >-
  #    If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
  #      $Env:PATH += ';C:\msys64\mingw64\bin'
  #    } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
  #      $Env:PATH += ';C:\msys64\mingw32\bin'
  #    }
  #- curl -sSf -o rustup-init.exe https://win.rustup.rs/
  #- rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  #- set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  #- if defined MSYS2 set PATH=C:\msys64\mingw%BITS%\bin;%PATH%
  #- rustc -Vv
  #- cargo -V
  #- if defined VCPKG_DEFAULT_TRIPLET git clone https://github.com/Microsoft/vcpkg c:\projects\vcpkg
  #- if defined VCPKG_DEFAULT_TRIPLET c:\projects\vcpkg\bootstrap-vcpkg.bat
  #- if defined VCPKG_DEFAULT_TRIPLET set VCPKG_ROOT=c:\projects\vcpkg
  #- if defined VCPKG_DEFAULT_TRIPLET echo yes > %VCPKG_ROOT%\Downloads\AlwaysAllowDownloads
  #- if defined VCPKG_DEFAULT_TRIPLET %VCPKG_ROOT%\vcpkg.exe install openssl
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - if defined MSYS2 set PATH=C:\msys64\mingw%BITS%\bin;%PATH%
  - rustc -V
  - cargo -V
  - if defined VCPKG_DEFAULT_TRIPLET git clone https://github.com/Microsoft/vcpkg c:\projects\vcpkg
  - if defined VCPKG_DEFAULT_TRIPLET c:\projects\vcpkg\bootstrap-vcpkg.bat
  - if defined VCPKG_DEFAULT_TRIPLET set VCPKG_ROOT=c:\projects\vcpkg
  - if defined VCPKG_DEFAULT_TRIPLET echo yes > %VCPKG_ROOT%\Downloads\AlwaysAllowDownloads
  - if defined VCPKG_DEFAULT_TRIPLET %VCPKG_ROOT%\vcpkg.exe install openssl

# TODO This is the "test phase", tweak it as you see fit
test_script:
  # we don't run the "test phase" when doing deploys
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo build --target %TARGET% &&
      cargo build --target %TARGET% --release &&
      cargo test --target %TARGET% &&
      cargo test --target %TARGET% --release &&
      cargo run --target %TARGET% &&
      cargo run --target %TARGET% --release
    )

before_deploy:
  # TODO Update this to build the artifacts that matter to you
  - cargo rustc --target %TARGET% --release -- -C lto
  - ps: ci\before_deploy.ps1

deploy:
  - provider: GitHub
    artifact: /.*\.zip/
    auth_token:
      secure: qmFViwbc65+dIFfFfnuO/vmoUvnsKgl3P0J1MPycBftGwgIeRY35Fw6TsVIeP+ez
    description: ''
    on:
      RUST_VERSION: stable
      appveyor_repo_tag: true  

  - provider: FTP
    artifact: se_shell.exe
    protocol: ftp
    host:
      secure: 01of48A4V0DFq+KqqCKGy7hkS+EptwJgeoiZ1jaqfo4=
    username:
      secure: sx8WGfnlWwTqm/yHM5EY1Q==
    password:
      secure: Uppevg5zPz8UmToK5gIJMA==
    folder: /SE2010
    on:
      RUST_VERSION: stable
      appveyor_repo_tag: true  

cache:
  - C:\Users\appveyor\.cargo\registry
  - target
branches:
  only:
    # Release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  - provider: Email
    on_build_success: false

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false